import{_ as n,p as e,q as t,R as a,v as l,a1 as s}from"./framework-5866ffd3.js";const i={},c=s(`<h2>jsx语法糖</h2><p>React使用JSX来替代常规的javascript。jsx是一个看起来很像XML的JavaScript语法扩展，在React中会被babel编译为JavaScript。</p><blockquote><p>语法糖：一个功能，有两种完成方式，其中简单的写法。叫语法糖</p><p>Babel 是一个 JavaScript 编译器</p></blockquote><h3 id="a-jsx的特点" tabindex="-1"><a class="header-anchor" href="#a-jsx的特点" aria-hidden="true">#</a> a. JSX的特点</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1. jsx执行更快，因为它在编译为JavaScript代码后进行了优化
2. 它是类型安全的，在编译过程中就能发现错误
3. 使用jsx编写模版更加简单快速
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="b-jsx几个注意的格式" tabindex="-1"><a class="header-anchor" href="#b-jsx几个注意的格式" aria-hidden="true">#</a> b. JSX几个注意的格式</h3><ol><li>React的JSX是使用大写和小写字母来区分本地组件和HTML标签</li><li>JSX和HTML的标签属性的区别</li></ol>`,7),d=a("thead",null,[a("tr",null,[a("th",null,"HTML标签属性"),a("th",null,"JSX"),a("th",null,"原因")])],-1),o=a("tr",null,[a("td",null,"for"),a("td",null,"htmlFor"),a("td",null,"for在js中为for循环的关键字")],-1),r=a("tr",null,[a("td",null,"class"),a("td",null,"className"),a("td",null,"class在js中为声明类关键字")],-1),u=a("td",null,"style",-1),p=a("td",null,null,-1),h=s(`<h3 id="c-jsx-和-html-区别" tabindex="-1"><a class="header-anchor" href="#c-jsx-和-html-区别" aria-hidden="true">#</a> c. jsx 和 html 区别</h3><ol><li>行内样式 必须是一个对象 第一个{}代表js环境 第二个 {} 代表 对象格式</li></ol><div class="language-react line-numbers-mode" data-ext="react"><pre class="language-react"><code>&lt;div style=&quot;{{width:&quot;200px&quot;}}&quot;&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><p>jsx中不要使用class，用className代替</p></li><li><p>在jsx中使用js代码，必须要写在{}</p></li><li><p>jsx 本地图片先引入 后使用</p></li><li><p>其他的，都可以当做HTML语法来用</p></li></ol><h3 id="d-文件引入方式" tabindex="-1"><a class="header-anchor" href="#d-文件引入方式" aria-hidden="true">#</a> d. 文件引入方式</h3><div class="language-react line-numbers-mode" data-ext="react"><pre class="language-react"><code>//引入后立即执行
import &quot;./Index.css&quot;

//什么时候调用什么时候执行
import Img from &quot;../static/logo.png&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="e-jsx是react虚拟出来的dom对象" tabindex="-1"><a class="header-anchor" href="#e-jsx是react虚拟出来的dom对象" aria-hidden="true">#</a> e. JSX是React虚拟出来的DOM对象</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// js创建DOM元素</span>
document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// React的标签对象</span>
React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">className</span><span class="token operator">:</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function v(m,x){return e(),t("div",null,[c,a("table",null,[d,a("tbody",null,[o,r,a("tr",null,[u,a("td",null,"需使用JS对象（使用双花括号--"+l()+" ）",1),p])])]),h])}const j=n(i,[["render",v],["__file","jsx.html.vue"]]);export{j as default};
