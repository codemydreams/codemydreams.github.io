import{_ as s,p as n,q as a,a1 as e}from"./framework-5866ffd3.js";const l={},p=e(`<h2 id="什么是sql" tabindex="-1"><a class="header-anchor" href="#什么是sql" aria-hidden="true">#</a> 什么是SQL？</h2><p>​ <code>Structured Query Language</code> ：结构化查询语言</p><p>​ 其实就是定义了操作所有关系型数据库的规则。每一种数据库操作的方式存在不一样的地方，称为“方言”。</p><p>​</p><h2 id="sql通用语法" tabindex="-1"><a class="header-anchor" href="#sql通用语法" aria-hidden="true">#</a> SQL通用语法</h2><ol><li><p>SQL 语句可以单行或多行书写，以分号结尾。</p></li><li><p>可使用空格和缩进来增强语句的可读性。</p></li><li><p>MySQL 数据库的 SQL 语句不区分大小写，关键字建议使用大写。</p></li><li><p>三种注释</p><ul><li><p>单行注释</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>-- 我是注释

# 我是注释（MySql特有）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>多行注释</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>/* 
	注释 
*/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><h2 id="sql分类" tabindex="-1"><a class="header-anchor" href="#sql分类" aria-hidden="true">#</a> SQL分类</h2><ol><li>DDL（Data Definition Language）数据定义语言</li></ol><p>​ 用来定义数据库对象：数据库，表，列等。关键字：create, drop,alter 等</p><ol start="2"><li>DML(Data Manipulation Language)数据操作语言</li></ol><p>​ 用来对数据库中表的数据进行增删改。关键字：insert, delete, update 等</p><ol start="3"><li>DQL(Data Query Language)数据查询语言</li></ol><p>​ 用来查询数据库中表的记录(数据)。关键字：select, where 等</p><ol start="4"><li>DCL(Data Control Language)数据控制语言(了解)</li></ol><p>​ 用来定义数据库的访问权限和安全级别，及创建用户。关键字：GRANT， REVOKE 等</p><h3 id="ddl-操作数据库、表" tabindex="-1"><a class="header-anchor" href="#ddl-操作数据库、表" aria-hidden="true">#</a> DDL:操作数据库、表</h3><h4 id="_1-操作数据库-crud" tabindex="-1"><a class="header-anchor" href="#_1-操作数据库-crud" aria-hidden="true">#</a> 1. 操作数据库：CRUD</h4><ul><li><p>C（Create）：创建</p><ul><li><p>创建数据库：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建数据库，判断不存在，再创建：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建数据库，并指定字符集</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> 数据库名称 <span class="token keyword">character</span> <span class="token keyword">set</span> 字符集名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>练习： 创建db4数据库，判断是否存在，并制定字符集为gbk</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> db4 <span class="token keyword">character</span> <span class="token keyword">set</span> gbk<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>R（Retrieve）：查询</p><ul><li><p>查询所有数据库的名称:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询某个数据库的字符集：查询某个数据库的创建语句</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">database</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>U（Update）：修改</p><ul><li><p>修改数据库的字符集</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">database</span> 数据库名称 <span class="token keyword">character</span> <span class="token keyword">set</span> 字符集名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>D（Delete）：删除</p><ul><li><p>删除数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">database</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>判断数据库存在，存在再删除</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>使用数据库</p><ul><li><p>查询当前正在使用的数据库名称</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>使用数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> 数据库名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul><h4 id="_2-操作表" tabindex="-1"><a class="header-anchor" href="#_2-操作表" aria-hidden="true">#</a> 2. 操作表</h4><ul><li><p>C（Create）：创建</p><ul><li><p>创建表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> 表名<span class="token punctuation">(</span>
	列名<span class="token number">1</span> 数据类型<span class="token number">1</span><span class="token punctuation">,</span>
	列名<span class="token number">2</span> 数据类型<span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  列名n 数据类型n
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">#注意：最后一列，不需要加逗号（,）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>复制表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> 表名 <span class="token operator">like</span> 被复制的表名<span class="token punctuation">;</span>      
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>数据类型</p><ul><li>int：整数类型</li><li>double：小数类型</li><li>date:日期，只包含年月日，yyyy-MM-dd</li><li>datetime:日期，包含年月日时分秒 yyyy-MM-dd HH:mm:ss</li><li>timestamp:时间错类型 包含年月日时分秒yyyy-MM-dd HH:mm:ss <ul><li>如果将来不给这个字段赋值，或赋值为null，则默认使用当前的系统时间，来自动赋值</li></ul></li><li>varchar：字符串 <ul><li>zhangsan 8个字符 张三 2个字符</li></ul></li></ul></li></ul></li><li><p>R（Retrieve）：查询</p><ul><li><p>查询某个数据库中所有的表名称</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>查询表结构</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">desc</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>U（Update）：修改</p><ul><li><p>修改表名</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">rename</span> <span class="token keyword">to</span> 新的表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改表的字符集</p></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">character</span> <span class="token keyword">set</span> 字符集名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>添加一列</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> 列名 数据类型<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>修改列名称 类型</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 change 列名 新列别 新数据类型<span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">modify</span> 列名 新数据类型<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除列</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">drop</span> 列名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul><p>​</p><ul><li><p>D（Delete）：删除</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">table</span> 表名<span class="token punctuation">;</span>

<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="dml-增删改表中数据" tabindex="-1"><a class="header-anchor" href="#dml-增删改表中数据" aria-hidden="true">#</a> DML：增删改表中数据</h3><ul><li><p>添加数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> 表名<span class="token punctuation">(</span>列名<span class="token number">1</span><span class="token punctuation">,</span>列名<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>列名n<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>值n<span class="token punctuation">)</span><span class="token punctuation">;</span>

注意：
	<span class="token number">1.</span> 列名和值要一一对应。
	<span class="token number">2.</span> 如果表名后，不定义列名，则默认给所有列添加值
	<span class="token keyword">insert</span> <span class="token keyword">into</span> 表名 <span class="token keyword">values</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>值n<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token number">3.</span> 除了数字类型，其他类型需要使用引号<span class="token punctuation">(</span>单双都可以<span class="token punctuation">)</span>引起来
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名 <span class="token punctuation">[</span><span class="token keyword">where</span> 条件<span class="token punctuation">]</span>

注意：
<span class="token number">1.</span> 如果不加条件，则删除表中所有记录。
<span class="token number">2.</span> 如果要删除所有记录
	<span class="token number">1.</span> <span class="token keyword">delete</span> <span class="token keyword">from</span> 表名<span class="token punctuation">;</span> <span class="token comment">-- 不推荐使用。有多少条记录就会执行多少次删除操作</span>
	<span class="token number">2.</span> <span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span> <span class="token comment">-- 推荐使用，效率更高 先删除表，然后再创建一张一样的表。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> 表名 <span class="token keyword">set</span> 列名<span class="token number">1</span> <span class="token operator">=</span> 值<span class="token number">1</span><span class="token punctuation">,</span> 列名<span class="token number">2</span> <span class="token operator">=</span> 值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">[</span><span class="token keyword">where</span> 条件<span class="token punctuation">]</span><span class="token punctuation">;</span>

注意：
	<span class="token number">1.</span> 如果不加任何条件，则会将表中所有记录全部修改。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>​</p><h3 id="dql-查询表中的记录" tabindex="-1"><a class="header-anchor" href="#dql-查询表中的记录" aria-hidden="true">#</a> DQL：查询表中的记录</h3><p>* select * from 表名;</p><ul><li><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表名列表
<span class="token keyword">where</span> 条件列表
<span class="token keyword">group</span> <span class="token keyword">by</span> 分组字段
<span class="token keyword">having</span> 分组之后的条件
<span class="token keyword">order</span> <span class="token keyword">by</span> 排序
<span class="token keyword">limit</span> 分页限定
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>基础查询</p><ul><li><p>多个字段的查询</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">select</span> 字段名<span class="token number">1</span>，字段名<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">from</span> 表名；
 
注意：
	如果查询所有字段，则可以使用<span class="token operator">*</span>来替代字段列表。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>去除重复：distinct</p></li><li><p>计算列</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token number">1.</span>一般可以使用四则运算计算一些列的值。（一般只会进行数值型的计算）
<span class="token number">2.</span>ifnull<span class="token punctuation">(</span>表达式<span class="token number">1</span><span class="token punctuation">,</span>表达式<span class="token number">2</span><span class="token punctuation">)</span>：<span class="token boolean">null</span>参与的运算，计算结果都为<span class="token boolean">null</span>
<span class="token number">3.</span>表达式<span class="token number">1</span>：哪个字段需要判断是否为<span class="token boolean">null</span>
<span class="token number">4.</span>如果该字段为<span class="token boolean">null</span>后的替换值。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>起别名：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">as</span>：<span class="token keyword">as</span>也可以省略
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>条件查询</p></li></ul><p>​ \\1. where子句后跟条件</p><p>​ \\2. 运算符</p><p>​ * &gt; 、&lt; 、&lt;= 、&gt;= 、= 、&lt;&gt;</p><p>​ * BETWEEN...AND</p><p>​ * IN( 集合)</p><p>​ * LIKE：模糊查询</p><p>​ * 占位符：</p><p>​ * _:单个任意字符</p><p>​ * %：多个任意字符</p><p>​ * IS NULL</p><p>​ * and 或 &amp;&amp;</p><p>​ * or 或 ||</p><p>​ * not 或 !</p><p>​</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询年龄大于20岁</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">&gt;=</span> <span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询年龄等于20岁</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询年龄不等于20岁</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">!=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">&lt;&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>             

<span class="token comment">-- 查询年龄大于等于20 小于等于30</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">&gt;=</span> <span class="token number">20</span> <span class="token operator">&amp;&amp;</span> age <span class="token operator">&lt;=</span><span class="token number">30</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">&gt;=</span> <span class="token number">20</span> <span class="token operator">AND</span> age <span class="token operator">&lt;=</span><span class="token number">30</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">BETWEEN</span> <span class="token number">20</span> <span class="token operator">AND</span> <span class="token number">30</span><span class="token punctuation">;</span>            

<span class="token comment">-- 查询年龄22岁，18岁，25岁的信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">22</span> <span class="token operator">OR</span> age <span class="token operator">=</span> <span class="token number">18</span> <span class="token operator">OR</span> age <span class="token operator">=</span> <span class="token number">25</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> age <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询英语成绩为null</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> english <span class="token operator">=</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span> <span class="token comment">-- 不对的 null值不能使用=（!=）判断</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> english <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>             

<span class="token comment">-- 查询英语成绩不为null</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> english <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询姓马的有哪些？ like</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> NAME <span class="token operator">LIKE</span> <span class="token string">&#39;马%&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询姓名第二个字是化的人</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> NAME <span class="token operator">LIKE</span> <span class="token string">&quot;_化%&quot;</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询姓名是3个字的人</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> NAME <span class="token operator">LIKE</span> <span class="token string">&#39;___&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询姓名中包含德的人</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> NAME <span class="token operator">LIKE</span> <span class="token string">&#39;%德%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43),t=[p];function o(i,c){return n(),a("div",null,t)}const r=s(l,[["render",o],["__file","基础.html.vue"]]);export{r as default};
